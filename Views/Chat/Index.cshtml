@model List<ChatMessage>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .container {
            max-width: 600px;
            margin: auto;
        }

        .message-container {
            overflow-y: auto;
            max-height: 400px;
            border: 1px solid #ccc; /* Add border around message container */
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 20px; /* Add margin at the bottom */
        }

        .input-group {
            margin-top: 20px; /* Add margin at the top */
        }

        .message-bubble {
            border-radius: 20px;
            padding: 10px 15px;
            margin-bottom: 10px;
            max-width: 70%;
        }

        .message-bubble-sent {
            background-color: #D1E7DD; /* Light blue for messages sent by the current user */
        }

        .message-bubble-received {
            background-color: #F8DE7E; /* Light yellow for messages received */
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mt-5 mb-4">Chat</h2>
        <div class="message-container" id="messages">
            @foreach (var message in Model)
{
    <div class="message-bubble @(message.SenderId == User.Identity.Name ? "message-bubble-sent" : "message-bubble-received")">
        <p><strong>@message.SenderId:</strong> @message.Content</p>
        <span class="small text-muted">@message.SentAt.ToString("HH:mm")</span>
    </div>
}
        </div>
        <div class="input-group">
            <input type="text" id="messageInput" class="form-control" placeholder="Type a message...">
            <div class="input-group-append">
                <button id="sendButton" class="btn btn-primary">Send</button>
            </div>
        </div>
    </div>
</body>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.start().catch(err => console.error(err.toString()));

        document.getElementById('sendButton').addEventListener('click', function() {
    var messageInput = document.getElementById('messageInput');
    var messages = document.getElementById('messages');

    if (messageInput.value.trim() !== '') {
        var newMessage = document.createElement('div');
        newMessage.className = 'message-bubble message-bubble-sent';
        var now = new Date();
        var timestamp = now.getHours().toString().padStart(2, '0') + ':' + 
                        now.getMinutes().toString().padStart(2, '0');
        newMessage.innerHTML = '<p><strong>You:</strong> ' + messageInput.value + '</p>' +
                               '<span class="small text-muted">' + timestamp + '</span>';
        messages.appendChild(newMessage);
        messageInput.value = '';
    }
});

        connection.on("ReceiveMessage", (user, message) => {
            const encodedMessage = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const isCurrentUser = user === "@User.Identity.Name";
            const bubbleClass = isCurrentUser ? "message-bubble-sent" : "message-bubble-received";
            const li = document.createElement("div");
            li.className = `message-bubble ${bubbleClass} ${isCurrentUser ? "message-bubble-current-user" : ""}`;
            li.innerHTML = `<p><strong>${user}:</strong> ${encodedMessage}</p><span class="small text-muted">${new Date().toLocaleTimeString()}</span>`;
            document.getElementById("messages").appendChild(li);
        });
    </script>
</body>
</html>


@* @model List<ChatMessage>

<h2>Chat</h2>

@if (Model.Any())
{
    <ul id="messagesList">
        @foreach (var message in Model)
        {
            <li>
                <strong>@message.SentAt.ToString("HH:mm:ss")</strong> -
                <span>@message.Content</span> -
                <em>@(message.SenderId)</em>
            </li>
        }
    </ul>
}
else
{
    <p>No previous chats.</p>
}

<div class="container">
    <div class="row p-1">
        <div class="col-6">
            <hr />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-1"></div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.start().catch(err => console.error(err.toString()));

        document.getElementById("sendButton").addEventListener("click", event => {
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", message).catch(err => console.error(err.toString()));
            event.preventDefault();
        });

        connection.on("ReceiveMessage", (user, message) => {
            const encodedMessage = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const currentTime = new Date().toLocaleTimeString();
            const messagesList = document.getElementById("messagesList");
            const li = document.createElement("li");

            li.innerHTML = `<strong>${currentTime}</strong> - <span>${encodedMessage}</span> - <em>${user}</em>`;
            messagesList.appendChild(li);
        });
    </script>
}

 *@